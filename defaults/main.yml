# defaults file for postgresql
---

postgresql_version: 9.6
postgresql_postgis_version: 2.4

# libdbd-pg-perl is required for tuning script
postgresql_packages:
  - postgresql-{{ postgresql_version }}
  - postgresql-contrib-{{ postgresql_version }}
  - python-psycopg2
  - libdbd-pg-perl

# nginx is required, if postgresql_with_pgbadger: yes
postgresql_with_pgbadger: no
postgresql_pgbadger_output_dir: /var/lib/pgbadger
# nginx base auth user
postgresql_pgbadger_user: pgbadger
# nginx base auth passwords (leave empty, if you do not want base auth protection)
postgresql_pgbadger_password: ''
# debian packages
postgresql_pgbadger_packages:
  - pgbadger

postgresql_with_postgis: no
postgresql_postgis_packages:
  - postgresql-{{ postgresql_version }}-postgis-{{ postgresql_postgis_version }}

postgresql_with_zabbix_monitoring: yes

postgresql_access_hosts: [ ]

# see http://pgtune.leopard.in.ua/ for calculation

# How much memory our PostgreSQL can use for
# buffers. Default value is insanely small.
# If PostgreSQL is the only thing we run on
# the machine, set it to 1/4 of available RAM
postgresql_shared_buffers: 256MB
# How much memory in total our PostgreSQL can use.
# Twice of shared_buffers seems good.
postgresql_effective_cache_size: 1GB
# How many connections we should allow from
# our app, workers, delayed_jobs etc. combined
postgresql_max_connections: 50
postgresql_listen_addresses: localhost
postgresql_port: 5432
postgresql_autovacuum: yes
postgresql_work_mem: 4MB
postgresql_maintenance_work_mem: 64MB
postgresql_synchronous_commit: yes
postgresql_deadlock_timeout: 1s
postgresql_checkpoint_timeout: 15min
postgresql_max_wal_size: 2GB
postgresql_min_wal_size: 1GB
# (checkpoint_timeout - 2min) / checkpoint_timeout)
# see https://blog.2ndquadrant.com/basics-of-tuning-checkpoints/
postgresql_checkpoint_completion_target: 0.86
postgresql_wal_buffers: 7864kB

# only used for postgresql version 9.3
postgresql_checkpoint_segments: 16

postgresql_log_destination: stderr
postgresql_log_statement: none
postgresql_log_line_prefix_syslog: 'user=%u,db=%d,app=%aclient=%h '
postgresql_log_line_prefix_stderr: '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
postgresql_log_min_duration_statement: -1
postgresql_log_checkpoints: no
postgresql_log_connections: no
postgresql_log_disconnections: no
postgresql_log_lock_waits: no
postgresql_log_temp_files: -1
postgresql_log_autovacuum_min_duration: -1

postgresql_cluster_name: ''

# lc_messages C or en_US is required for pgbadger
postgresql_lc_messages: en_US.UTF-8
postgresql_lc_monetary: '{{ postgresql_lc_messages }}'
postgresql_lc_numeric: '{{ postgresql_lc_messages }}'
postgresql_lc_time: '{{ postgresql_lc_messages }}'

postgresql_default_text_search_config: pg_catalog.english

# Users.
postgresql_users: []

# Databases.
postgresql_databases: []

postgresql_with_barman: no
postgresql_barman_user: barman
# ssh host
postgresql_barman_host: localhost
# ssh port
postgresql_barman_port: 22
# barman home at barman server for rsync (wals)
postgresql_barman_dir: /var/lib/barman

# you have to set a password
# postgresql_barman_password:

# ssh public key, which get access to postgres user
postgresql_barman_ssh_public_key: ''
postgresql_barman_wals_dir: ''

# can be manually set (otherwise it is calculated)
#postgresql_barman_archive_command: ''
