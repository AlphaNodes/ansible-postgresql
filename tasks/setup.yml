- set_fact: postgresql_barman_archive_command='rsync -a -e "ssh -p {{ postgresql_barman_port }}" %p {{ postgresql_barman_user }}@{{ postgresql_barman_host }}:{{ postgresql_barman_dir }}/{{ postgresql_barman_name | mandatory }}/incoming/%f'
  when: postgresql_with_barman and postgresql_barman_archive_command is undefined

- name: Be sure PostgreSQL are installed
  apt:
    name: '{{ postgresql_packages }}'
    state: present

- name: Be sure psycopg2 is installed
  apt:
    name: "{{ 'python3-psycopg2' if ansible_python_interpreter is defined and ansible_python_interpreter == '/usr/bin/python3' else 'python-psycopg2' }}"
    state: present

- include_tasks: postgis.yml
  when: postgresql_with_postgis

- include_tasks: pgbadger.yml
  when: postgresql_with_pgbadger

- include_tasks: cleanup_pgbadger.yml
  when: not postgresql_with_pgbadger

- name: Ensure PostgreSQL is started and enabled to start at boot.
  service:
    name: postgresql
    state: started
    enabled: yes

- stat: path=/etc/zabbix
  register: zabbix_config_exists

- name: Install PostgreSQL zabbix configuration
  tags: zabbix-agent
  copy:
    src: userparameter_pgsql.conf
    dest: /etc/zabbix/zabbix_agentd.{{ 'd' if zabbix_use_repo is defined and zabbix_use_repo else 'conf.d' }}/userparameter_pgsql.conf
  notify: restart zabbix-agent
  when: zabbix_config_exists.stat.exists and postgresql_with_zabbix_monitoring

- name: Update PostgreSQL configuration
  template:
    src: postgresql.j2
    dest: '/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf'
  notify: restart postgresql

- name: Update PostgreSQL hba configuration
  template:
    src: pg_hba.j2
    dest: '/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf'
    owner: '{{ postgresql_user }}'
    group: '{{ postgresql_group }}'
    mode: 0640
  notify: restart postgresql

- name: Check if PostgreSQL database is initialized.
  stat:
    path: "{{ postgresql_data_dir }}/PG_VERSION"
  register: pgdata_dir_version

- name: Ensure PostgreSQL database is initialized.
  command: "{{ postgresql_bin_path }}/initdb -D {{ postgresql_data_dir }}"
  when: not pgdata_dir_version.stat.exists
  become: yes
  become_user: "{{ postgresql_user }}"
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  vars:
    ansible_ssh_pipelining: true

# see https://www.postgresql.org/docs/9.6/static/kernel-resources.html
- name: Setup sysctl vm.overcommit_memory for more robust system behavior
  sysctl:
    name: vm.overcommit_memory
    value: 2
    sysctl_set: yes
    state: present
    reload: yes
  when: ansible_virtualization_type == 'kvm' or ansible_virtualization_type == 'VMware'

- include_tasks: postgresqltuner.yml
