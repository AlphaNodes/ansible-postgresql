# barman ssh key should get access to postgres account

- name: Install Barman CLI
  apt:
    name: 'barman-cli'
    state: present

- name: Configure barman ssh access for postgres user
  authorized_key:
    user: postgres
    key: '{{ postgresql_barman_ssh_public_key }}'
    state: present
  when: postgresql_barman_ssh_public_key != ''

- name: Check if ssh private key for barman server is provided by host
  stat:
    path: "{{ playbook_dir }}/files/barman_access/{{ inventory_hostname }}_id_rsa"
  ignore_errors: True
  register: key_by_host
  delegate_to: localhost

- name: Check if ssh private key for barman server is provided by group
  stat:
    path: "{{ playbook_dir }}/files/barman_access/{{ group_names[0] }}_id_rsa"
  ignore_errors: True
  register: key_by_group
  delegate_to: localhost

- name: Install ssh private key for barman server by host (if provided)
  copy:
    src: barman_access/{{ inventory_hostname }}_id_rsa
    dest: /var/lib/postgresql/.ssh/id_rsa
    owner: postgres
    group: postgres
    force: no
    mode: 0600
  when: key_by_host.stat.exists

- name: Install ssh private key for barman server by group (if provided)
  copy:
    src: barman_access/{{ group_names[0] }}_id_rsa
    dest: /var/lib/postgresql/.ssh/id_rsa
    owner: postgres
    group: postgres
    force: no
    mode: 0600
  when: not key_by_host.stat.exists and key_by_group.stat.exists

- name: Create barman postgresql user
  become_user: postgres
  become: yes
  postgresql_user:
    name: "{{ postgresql_barman_user }}"
    password: "{{ postgresql_barman_password | mandatory }}"
    role_attr_flags: 'SUPERUSER,CREATEDB'
    state: present
  no_log: yes

- name: Connection check (ssh) to barman Server
  tags: connection_check, ssh_check
  become_user: postgres
  become: yes
  command: 'ssh -p {{ postgresql_barman_port }} {{ postgresql_barman_user }}@{{ postgresql_barman_host }} -C true'
  changed_when: no
