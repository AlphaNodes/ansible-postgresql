# PostgreSQL user parameter

#
# Server specific examples
#
# Get the total number of commited transactions
UserParameter=psql.tx_commited[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select sum(xact_commit) from pg_stat_database\"" | tr -d ' '
# Get the total number of rolled back transactions
UserParameter=psql.tx_rolledback[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select sum(xact_rollback) from pg_stat_database\"" | tr -d ' '
# Max Connections
UserParameter=psql.server_maxcon[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"show max_connections\"" | tr -d ' '
# PostgreSQL is running
UserParameter=psql.running[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select 1\"" > /dev/null 2>&1 ; echo $?

# Added by SRA OSS
# Get number of checkpoint count (by checkpoint_timeout)
UserParameter=psql.checkpoints_timed[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select checkpoints_timed from pg_stat_bgwriter\"" | tr -d ' '
# Get number of checkpoint count (by checkpoint_segments)
UserParameter=psql.checkpoints_req[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select checkpoints_req from pg_stat_bgwriter\"" | tr -d ' '
# Get the total number of connections
UserParameter=psql.server_connections[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select count(*) from pg_stat_activity;\"" | tr -d ' '
# Get the total number of active (on processing SQL) connections
UserParameter=psql.active_connections[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select count(state) from pg_stat_activity where state = 'active'\"" | tr -d ' '
# Get the total number of idle connections
UserParameter=psql.idle_connections[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select count(state) from pg_stat_activity where state = 'idle'\"" | tr -d ' '
# Get the total number of idle in transaction connections
UserParameter=psql.idle_tx_connections[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select count(state) from pg_stat_activity where state = 'idle in transaction'\"" | tr -d ' '
# Get the total number of lock-waiting connections
UserParameter=psql.locks_waiting[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select count(*) from pg_stat_activity where waiting = 't'\"" | tr -d ' '

# Get buffer information
UserParameter=psql.buffers_checkpoint[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select buffers_checkpoint from pg_stat_bgwriter\"" | tr -d ' '
UserParameter=psql.buffers_clean[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select buffers_clean from pg_stat_bgwriter\"" | tr -d ' '
UserParameter=psql.maxwritten_clean[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select maxwritten_clean from pg_stat_bgwriter\"" | tr -d ' '
UserParameter=psql.buffers_backend[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select buffers_backend from pg_stat_bgwriter\"" | tr -d ' '
UserParameter=psql.buffers_backend_fsync[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select buffers_backend_fsync from pg_stat_bgwriter\"" | tr -d ' '
UserParameter=psql.buffers_alloc[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select buffers_alloc from pg_stat_bgwriter\"" | tr -d ' '

# Get number of slow queries
UserParameter=psql.slow_queries[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select count(*) from pg_stat_activity where state = 'active' and now() - query_start > '$5 sec'::interval\"" | tr -d ' '
UserParameter=psql.slow_select_queries[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select count(*) from pg_stat_activity where state = 'active' and now() - query_start > '$5 sec'::interval and query ilike 'select%'\"" | tr -d ' '
UserParameter=psql.slow_dml_queries[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select count(*) from pg_stat_activity where state = 'active' and now() - query_start > '$5 sec'::interval and query ~* '^(insert|update|delete)'\"" | tr -d ' '

#
# Database specific examples
#
# Get the size of a Database (in bytes)
UserParameter=psql.db_size[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select pg_database_size('$5')\"" | tr -d ' '
# Get number of active connections for a specified database
UserParameter=psql.db_connections[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select numbackends from pg_stat_database where datname = '$5'\"" | tr -d ' '
# Get number of tuples returned for a specified database
UserParameter=psql.db_returned[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select tup_returned from pg_stat_database where datname = '$5'\"" | tr -d ' '
# Get number of tuples fetched for a specified database
UserParameter=psql.db_fetched[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select tup_fetched from pg_stat_database where datname = '$5'\"" | tr -d ' '
# Get number of tuples inserted for a specified database
UserParameter=psql.db_inserted[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select tup_inserted from pg_stat_database where datname = '$5'\"" | tr -d ' '
# Get number of tuples updated for a specified database
UserParameter=psql.db_updated[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select tup_updated from pg_stat_database where datname = '$5'\"" | tr -d ' '
# Get number of tuples deleted for a specified database
UserParameter=psql.db_deleted[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select tup_deleted from pg_stat_database where datname = '$5'\"" | tr -d ' '
# Get number of commited/rolled back transactions for a specified database
UserParameter=psql.db_tx_commited[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select xact_commit from pg_stat_database where datname = '$5'\"" | tr -d ' '
UserParameter=psql.db_tx_rolledback[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select xact_rollback from pg_stat_database where datname = '$5'\"" | tr -d ' '

# Cache Hit Ratio
UserParameter=psql.cachehit_ratio[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"SELECT round(blks_hit*100/(blks_hit+blks_read), 2) AS cache_hit_ratio FROM pg_stat_database WHERE datname = '$5' and blks_read > 0 union all select 0.00 AS cache_hit_ratio order by cache_hit_ratio desc limit 1\"" | tr -d ' '

# Added by SRA OSS
# Get number of temp files
UserParameter=psql.db_temp_files[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select temp_files from pg_stat_database where datname = '$5'\"" | tr -d ' '
# Get temp file size (in bytes)
UserParameter=psql.db_temp_bytes[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select temp_bytes from pg_stat_database where datname = '$5'\"" | tr -d ' '
# Get percentage of dead tuples of all tables for a specified database
UserParameter=psql.db_dead_tup_ratio[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select round(sum(n_dead_tup)*100/sum(n_live_tup+n_dead_tup), 2) as dead_tup_ratio from pg_stat_all_tables where n_live_tup > 0\"" | tr -d ' '
# Get number of deadlocks for a specified database (9.2 or later)
UserParameter=psql.db_deadlocks[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select deadlocks from pg_stat_database where datname = '$5'\"" | tr -d ' '


#
# Table specific examples
#
# Get table cache hit ratio of a specific table
UserParameter=psql.table_cachehit_ratio[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select round(heap_blks_hit*100/(heap_blks_hit+heap_blks_read), 2) as cache_hit_ratio from pg_statio_user_tables where schemaname = '$5' and relname = '$6' and heap_blks_read > 0 union all select 0.00 as cache_hit_ratio order by cache_hit_ratio desc limit 1\"" | tr -d ' '
# Get number of sequencial scan of a specific table
UserParameter=psql.table_seq_scan[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select seq_scan from pg_stat_user_tables where schemaname = '$5' and relname = '$6'\"" | tr -d ' '
# Get number of index scan of a specific table
UserParameter=psql.table_idx_scan[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select coalesce(idx_scan,0) from pg_stat_user_tables where schemaname = '$5' and relname = '$6'\"" | tr -d ' '
# Get number of vacuum count of a specific table
UserParameter=psql.table_vacuum_count[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select vacuum_count from pg_stat_user_tables where schemaname = '$5' and relname = '$6'\"" | tr -d ' '
# Get number of analyze count of a specific table
UserParameter=psql.table_analyze_count[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select analyze_count from pg_stat_user_tables where schemaname = '$5' and relname = '$6'\"" | tr -d ' '
# Get number of autovacuum count of a specific table
UserParameter=psql.table_autovacuum_count[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select autovacuum_count from pg_stat_user_tables where schemaname = '$5' and relname = '$6'\"" | tr -d ' '
# Get number of autoanalyze count of a specific table
UserParameter=psql.table_autoanalyze_count[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select autoanalyze_count from pg_stat_user_tables where schemaname = '$5' and relname = '$6'\"" | tr -d ' '

# Get number of tuples of a specific table
UserParameter=psql.table_n_tup_ins[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select n_tup_ins from pg_stat_user_tables where schemaname = '$5' and relname = '$6'\"" | tr -d ' '
UserParameter=psql.table_n_tup_upd[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select n_tup_upd from pg_stat_user_tables where schemaname = '$5' and relname = '$6'\"" | tr -d ' '
UserParameter=psql.table_n_tup_del[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select n_tup_del from pg_stat_user_tables where schemaname = '$5' and relname = '$6'\"" | tr -d ' '
UserParameter=psql.table_seq_tup_read[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select seq_tup_read from pg_stat_user_tables where schemaname = '$5' and relname = '$6'\"" | tr -d ' '
UserParameter=psql.table_idx_tup_fetch[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select coalesce(idx_tup_fetch,0) from pg_stat_user_tables where schemaname = '$5' and relname = '$6'\"" | tr -d ' '
UserParameter=psql.table_n_tup_hot_upd[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select n_tup_hot_upd from pg_stat_user_tables where schemaname = '$5' and relname = '$6'\"" | tr -d ' '
UserParameter=psql.table_n_live_tup[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select n_live_tup from pg_stat_user_tables where schemaname = '$5' and relname = '$6'\"" | tr -d ' '
UserParameter=psql.table_n_dead_tup[*],sudo -n -u $3 -i eval "psql -h $1 -p $2 -U $3 -d $4 -t -c \"select n_dead_tup from pg_stat_user_tables where schemaname = '$5' and relname = '$6'\"" | tr -d ' '

#
# Discovery Rule
#
# Database Discovery
UserParameter=db.list.discovery[*],$5/psql_find_dbname.sh $1 $2 $3 $4
UserParameter=db_table.list.discovery[*],$5/psql_find_table.sh $1 $2 $3 $4
